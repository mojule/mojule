[
  {
    "name": "root",
    "model": {
      "foo": "properties which are children of a tag become properties of the node model",
      "foo bar": "property names can have spaces",
      "with \"quoted\" quotes": true
    }
  },
  [
    {
      "name": "types",
      "model": {
        "foo": "unquoted string with spaces is parsed as a single string",
        "bar": "strings can also be quoted and contain \"escaped quotes\"",
        "baz": 15,
        "qux": "1.16",
        "isFoo": true,
        "isBar": false,
        "optional": null,
        "foos": [
          "string1",
          "string2",
          "string3",
          42,
          true,
          false,
          null,
          "Hello, World!"
        ],
        "barbaz": {
          "foo": true,
          "bar": 3.1415
        }
      }
    }
  ],
  [
    {
      "name": "complex",
      "model": {
        "bars": [
          "foo",
          "",
          "bar",
          "baz"
        ],
        "large": [
          "isNode",
          "isValue",
          "createRawNode",
          "getChildren",
          "getValue",
          "setValue",
          "remove",
          "add",
          "get",
          "getRoot",
          "map",
          "clone",
          "ancestors",
          "childAt",
          "closest",
          "descendants",
          "firstChild",
          "getParent",
          "lastChild",
          "nextSibling",
          "previousSibling",
          "siblings",
          "walk",
          "walkUp",
          "accepts",
          "atPath",
          "contains",
          "find",
          "findAll",
          "getMeta",
          "getPath",
          "hasChild",
          "hasChildren",
          "index",
          "isEmpty",
          "meta",
          "nodeType",
          "setMeta",
          "slug",
          "append",
          "empty",
          "insertAfter",
          "insertAt",
          "insertBefore",
          "prepend",
          "prune",
          "removeAt",
          true,
          "replaceChild",
          false,
          "unwrap",
          null,
          "value",
          "wrap",
          "foo",
          "bar",
          "baz",
          "qux",
          "Value with spaces",
          "helloWorld",
          42
        ],
        "mixed": [
          "you",
          "can",
          "use",
          "a",
          "mix",
          "of",
          "inline",
          "and",
          "nested"
        ],
        "nested": [
          "isNode",
          "isValue",
          "createRawNode",
          "getChildren",
          "getValue",
          "setValue",
          "remove",
          "add",
          "get",
          [
            "this is an inline nested array",
            1,
            2,
            3
          ],
          {
            "foo": 42,
            "bar": "42"
          },
          [
            "getRoot",
            "map",
            "clone",
            "ancestors",
            "childAt",
            "closest",
            "descendants",
            "firstChild",
            [
              "foo",
              "bar",
              "baz"
            ],
            {
              "foo": 42,
              "bar": "42"
            }
          ],
          "He thrusts his fists\n   against the\n  posts\n\nand\n        still\n  insists he\n            sees the ghosts\n"
        ]
      }
    }
  ],
  [
    {
      "name": "heredocs",
      "model": {
        "description": "a heredoc syntax is supported for multiline strings",
        "rhyme": "He thrusts his fists\n   against the\n  posts\n\nand\n        still\n  insists he\n            sees the ghosts\n"
      }
    }
  ]
]